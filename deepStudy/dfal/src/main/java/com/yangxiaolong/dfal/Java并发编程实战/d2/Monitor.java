package com.yangxiaolong.dfal.Java并发编程实战.d2;

/**
 * @author YXL
 * @date 2019/12/16 13:25
 */
public class Monitor {
    /**
     * 管程:管理共享变量以及对共享变量操作的过程,并支持并发.
     * MESA模型:
     * 并发编程的两大核心:互斥 同一时刻就允许一个线程访问 同步:线程之间如何通信,协作.
     * 条件变量:每个条件变量对应有一个等待队列.
     * 1.解决互斥问题:管程将共享变量这个队列和相关操作入队,出队都封装起来了,线程A,B想访问共享
     * 变量queue,就只能通过管程提供的方法,而方法保证互斥,只允许一个线程进入.
     * 2.解决同步问题:入口等待队列:多个线程同时试图进入管程中,只允许一个线程进入,其他线程等待
     * 条件变量:每一个条件变量都有一个等待队列.
     * 3.在Java中 synchronized对MESA模型进行了精简,在Java语言内置的管程中只有一个条件变量,wait()方法时
     * 在其修饰的代码块中,在编译会自动生成相关加锁和解锁,但是只支持一个条件变量.
     */

}
